"""add vendor and amount columns to receipts

Revision ID: e347f92dd51f
Revises: 1f775341a97c
Create Date: 2025-10-17 16:33:08.475804

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e347f92dd51f'
down_revision: Union[str, Sequence[str], None] = '1f775341a97c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('expenses')
    op.add_column('receipts', sa.Column('vendor', sa.String(), nullable=True))
    op.add_column('receipts', sa.Column('amount', sa.Numeric(), nullable=True))
    op.add_column('receipts', sa.Column('currency', sa.String(), nullable=True))
    op.add_column('receipts', sa.Column('expense_date', sa.DateTime(), nullable=True))
    op.add_column('receipts', sa.Column('category', sa.String(), nullable=True))
    op.add_column('receipts', sa.Column('deleted', sa.Boolean(), nullable=True))
    op.alter_column('receipts', 'data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('receipts', 'data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.drop_column('receipts', 'deleted')
    op.drop_column('receipts', 'category')
    op.drop_column('receipts', 'expense_date')
    op.drop_column('receipts', 'currency')
    op.drop_column('receipts', 'amount')
    op.drop_column('receipts', 'vendor')
    op.create_table('expenses',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('vendor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('expense_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('receipt_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], name=op.f('expenses_receipt_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('expenses_pkey'))
    )
    # ### end Alembic commands ###
